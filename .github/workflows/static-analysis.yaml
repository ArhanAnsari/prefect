name: Static analysis

# on PR and push to main
on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read

# Limit concurrency by workflow/branch combination.
#
# For pull request builds, pushing additional changes to the
# branch will cancel prior in-progress and pending builds.
#
# For builds triggered on a branch push, additional changes
# will wait for prior builds to complete before starting.
#
# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  pre-commit-checks:
    name: Pre-commit checks
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        id: setup_python
        with:
          python-version: "3.9.18"

      - name: UV Cache
        # Manually cache the uv cache directory
        # until setup-python supports it:
        # https://github.com/actions/setup-python/issues/822
        uses: actions/cache@v4
        id: cache-uv
        with:
          path: ~/.cache/uv
          key: uvcache-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('requirements-client.txt', 'requirements.txt', 'requirements-dev.txt') }}

      - name: Install packages
        run: |
          python -m pip install -U uv pre-commit
          uv pip install --upgrade --system -e .[dev]

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache-dependency-path: "**/package-lock.json"

      - name: Install mintlify-scrape
        run: npm install -g @mintlify/scraping

      - name: Run pre-commit
        run: |
          pre-commit run --show-diff-on-failure --color=always --all-files

      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Generate OpenAPI YAML and commit
        # Generate OpenAPI YAML for the UI
        with:
          token: ${{ secrets.PREFECT_CONTENTS_PR_RW }}
        run: |
          uv run --with 'pydantic>=2.9.0' ./scripts/generate_openapi_yml.py
          git add src/prefect/_internal/openapi.yml
          git commit -m "Update OpenAPI YAML" || echo "No changes to commit"
          git push orign HEAD:${{ github.head_ref || github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.PREFECT_CONTENTS_PR_RW }}

  